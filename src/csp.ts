import { fixed, dropping, sliding, promise } from './impl/buffers';
import {
  mapFrom,
  mapInto,
  filterFrom,
  filterInto,
  removeFrom,
  removeInto,
  mapcatFrom,
  mapcatInto,
  pipe,
  split,
  reduce,
  onto,
  fromColl,
  map,
  merge,
  into,
  take as takeN,
  unique,
  uniqueObj,
  partitionBy,
  partition,
  mult,
  mix,
  pub,
  pipeline,
  pipelineAsync,
} from './csp.operation';

export const operations = {
  mapFrom,
  mapInto,
  filterFrom,
  filterInto,
  removeFrom,
  removeInto,
  mapcatFrom,
  mapcatInto,
  pipe,
  split,
  reduce,
  onto,
  fromColl,
  map,
  merge,
  into,
  unique,
  uniqueObj,
  partitionBy,
  partition,
  mult,
  mix,
  pub,
  pipeline,
  pipelineAsync,
  take: takeN,
};
export const buffers = { fixed, dropping, sliding, promise };
export { CLOSED, Channel } from './impl/channels';
export { timeout } from './impl/timers';
export { DEFAULT } from './impl/results';
export {
  put,
  take,
  offer,
  poll,
  sleep,
  alts,
  putThenCallback as putAsync,
  takeThenCallback as takeAsync,
} from './impl/process';
export { spawn, go, chan, promiseChan } from './csp.core';
